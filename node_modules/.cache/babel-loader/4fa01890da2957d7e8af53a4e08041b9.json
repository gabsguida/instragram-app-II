{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adriana\\\\codenation\\\\react-16\\\\src\\\\routes\\\\ProfileRoute\\\\ProfileRoute.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = () => {\n  const [isLoading, setisLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const {\n    username\n  } = this.props.match.params;\n  const findUserByUsername = useCallback(username => {\n    const result = users.filter(user => user.username === username);\n    return result.length > 0 ? result[0] : {\n      id: \"\",\n      name: `USER NOT FOUND (username = ${username})`,\n      avatar: \"\",\n      username: username,\n      email: \"\"\n    };\n  }, [users.length]); // api call to get users\n\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\").then(res => res.json()).then(response => {\n      setUsers(response);\n      setisLoading(false);\n    });\n  }, []); // return user by username\n\n  useEffect(() => {\n    const userFound = findUserByUsername(username);\n    setUser(userFound);\n  }, [users.length]); // api call to get posts\n\n  useEffect(() => {\n    if (user.id) {\n      fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${user.id}/posts`).then(res => res.json()).then(response => {\n        setPosts(response);\n        setisLoading(false);\n      });\n    }\n  }, [user.id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"profile-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), !isLoading && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserProfile, Object.assign({}, user, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(UserPosts, {\n    posts: posts,\n    userInfo: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ProfileRoute;","map":{"version":3,"sources":["C:/Users/Adriana/codenation/react-16/src/routes/ProfileRoute/ProfileRoute.jsx"],"names":["React","useState","useEffect","useCallback","UserProfile","UserPosts","Loading","ProfileRoute","isLoading","setisLoading","posts","setPosts","user","setUser","users","setUsers","username","props","match","params","findUserByUsername","result","filter","length","id","name","avatar","email","fetch","then","res","json","response","userFound"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\n\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = () => {\n  const [isLoading, setisLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);  \n\n  const {username} = this.props.match.params;\n\n  const findUserByUsername = useCallback(\n    (username) => {\n      const result = users.filter((user) => user.username === username);\n      return result.length > 0 ? result[0] : {\n        id: \"\", \n        name: `USER NOT FOUND (username = ${username})`,\n        avatar: \"\",\n        username: username,\n        email: \"\"\n      };\n    },\n    [users.length]\n  )\n\n  // api call to get users\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\")\n    .then(res => res.json())\n    .then(response => {\n      setUsers(response);\n      setisLoading(false); \n    });\n  }, []);\n\n  // return user by username\n  useEffect(() => {\n    const userFound = findUserByUsername(username);\n    setUser(userFound);    \n  },[users.length])\n\n   // api call to get posts\n   useEffect(() => {\n    if(user.id){\n      fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${user.id}/posts`)\n      .then(res => res.json())\n      .then(response => {\n        setPosts(response);\n        setisLoading(false);\n      })\n    }\n  }, [user.id]);\n\n  return (\n    <div data-testid=\"profile-route\">\n      {isLoading && <Loading />}\n      {!isLoading && (\n        <React.Fragment>\n          <UserProfile {...user} />\n          <UserPosts posts={posts} userInfo={user} />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileRoute;\n"]},"metadata":{},"sourceType":"module"}