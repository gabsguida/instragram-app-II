{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adriana\\\\codenation\\\\react-16\\\\src\\\\containers\\\\Stories\\\\Stories.jsx\";\nimport React, { useState } from \"react\";\nimport Story from '../../components/Story';\nimport './Stories.scss'; // criar uma prop q diga se a story é nova ou não\n\nconst Stories = ({\n  stories,\n  getUserHandler\n}) => {\n  const [showStory, toggleStory] = useState(false);\n  const storyView = stories.map(story => {\n    return {\n      id: story.id,\n      hasNew: true\n    };\n  });\n\n  const hasNewStory = id => {\n    return storyView.filter(story => story.id === id)[0].hasNew;\n  }; // const [hasNewStory, setHasNewStory] = useState([]);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"stories\",\n    \"data-testid\": \"stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, stories.map(story => {\n    const user = getUserHandler(story.userId);\n\n    if (!user) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => toggleStory({\n        user: user,\n        story: story\n      }),\n      className: \"user__thumb\" + (hasNewStory(story.id) ? \"user__thumb--hasNew\" : \"\"),\n      key: story.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user__thumb__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: user.avatar,\n      alt: user.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    })));\n  }))), showStory && /*#__PURE__*/React.createElement(Story, {\n    handleClose: toggleStory,\n    user: showStory.user,\n    story: showStory.story,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Stories;","map":{"version":3,"sources":["C:/Users/Adriana/codenation/react-16/src/containers/Stories/Stories.jsx"],"names":["React","useState","Story","Stories","stories","getUserHandler","showStory","toggleStory","storyView","map","story","id","hasNew","hasNewStory","filter","user","userId","avatar","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAO,gBAAP,C,CAEA;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAiC;AAC/C,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BN,QAAQ,CAAC,KAAD,CAAzC;AAEA,QAAMO,SAAS,GAAGJ,OAAO,CAACK,GAAR,CAAaC,KAAD,IAAW;AACvC,WAAO;AACLC,MAAAA,EAAE,EAAED,KAAK,CAACC,EADL;AAELC,MAAAA,MAAM,EAAE;AAFH,KAAP;AAID,GALiB,CAAlB;;AAMA,QAAMC,WAAW,GAAIF,EAAD,IAAQ;AAC1B,WAAOH,SAAS,CAACM,MAAV,CAAkBJ,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAcA,EAA1C,EAA8C,CAA9C,EAAiDC,MAAxD;AACD,GAFD,CAT+C,CAY/C;;;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAA6B,mBAAY,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGR,OAAO,CAACK,GAAR,CAAaC,KAAD,IAAW;AACtB,UAAMK,IAAI,GAAGV,cAAc,CAACK,KAAK,CAACM,MAAP,CAA3B;;AACA,QAAG,CAACD,IAAJ,EAAS;AACP,aAAO,IAAP;AACD;;AACD,wBACE;AACE,MAAA,OAAO,EAAE,MAAMR,WAAW,CAAC;AAACQ,QAAAA,IAAI,EAACA,IAAN;AAAYL,QAAAA,KAAK,EAACA;AAAlB,OAAD,CAD5B;AAEE,MAAA,SAAS,EAAE,iBAAiBG,WAAW,CAACH,KAAK,CAACC,EAAP,CAAX,GAAwB,qBAAxB,GAAgD,EAAjE,CAFb;AAGE,MAAA,GAAG,EAAED,KAAK,CAACC,EAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEI,IAAI,CAACE,MAAf;AAAuB,MAAA,GAAG,EAAEF,IAAI,CAACG,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAUD,GAfA,CAFH,CADF,CADF,EAwBGZ,SAAS,iBACR,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAEC,WAApB;AAAiC,IAAA,IAAI,EAAED,SAAS,CAACS,IAAjD;AAAuD,IAAA,KAAK,EAAET,SAAS,CAACI,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADF;AA8BD,CA3CD;;AA6CA,eAAeP,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Story from '../../components/Story';\n\nimport './Stories.scss';\n\n// criar uma prop q diga se a story é nova ou não\n\nconst Stories = ({ stories, getUserHandler }) => {\n  const [showStory, toggleStory] = useState(false);\n\n  const storyView = stories.map((story) => {\n    return {\n      id: story.id,\n      hasNew: true\n    }\n  })\n  const hasNewStory = (id) => {\n    return storyView.filter((story) => story.id  === id)[0].hasNew;\n  }\n  // const [hasNewStory, setHasNewStory] = useState([]);\n  return (\n    <React.Fragment>\n      <section className=\"stories\" data-testid=\"stories\">\n        <div className=\"container\">\n\n          {stories.map((story) => {\n            const user = getUserHandler(story.userId);\n            if(!user){\n              return null;\n            }\n            return (\n              <button \n                onClick={() => toggleStory({user:user, story:story})} \n                className={\"user__thumb\" + (hasNewStory(story.id) ? \"user__thumb--hasNew\" : \"\")}\n                key={story.id}>\n                <div className=\"user__thumb__wrapper\">\n                  <img src={user.avatar} alt={user.name} />\n                </div>\n              </button>\n            );\n          })} \n\n        </div>\n      </section>\n\n      {showStory && (\n        <Story handleClose={toggleStory} user={showStory.user} story={showStory.story} />\n        )}\n    </React.Fragment>\n  );\n};\n\nexport default Stories;\n"]},"metadata":{},"sourceType":"module"}