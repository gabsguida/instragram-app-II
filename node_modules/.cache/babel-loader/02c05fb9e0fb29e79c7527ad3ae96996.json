{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adriana\\\\codenation\\\\react-16\\\\src\\\\routes\\\\ProfileRoute\\\\ProfileRoute.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = ({\n  match\n}) => {\n  const [isLoading, setisLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  console.log(match);\n\n  const findUserByUsername = username => {\n    const result = users.filter(user => user.username === username);\n    return result.length > 0 ? result[0] : {\n      id: \"\",\n      name: `USER NOT FOUND (username = ${username})`,\n      avatar: \"\",\n      username: username,\n      email: \"\"\n    };\n  };\n\n  const findUserByUsernameMemo = useCallback(username => findUserByUsername(username), [findUserByUsername]); // api call to get users\n\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\").then(res => res.json()).then(response => {\n      setUsers(response);\n      const userFound = findUserByUsernameMemo(match.params.username);\n      console.log(userFound);\n      setUser(userFound);\n      setisLoading(false);\n    });\n  }, [user, findUserByUsernameMemo, match]); // api call to get posts\n\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/1/posts\").then(res => res.json()).then(response => {\n      setPosts(response);\n      setisLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"profile-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), !isLoading && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserProfile, Object.assign({}, user, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(UserPosts, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ProfileRoute;","map":{"version":3,"sources":["C:/Users/Adriana/codenation/react-16/src/routes/ProfileRoute/ProfileRoute.jsx"],"names":["React","useState","useEffect","useCallback","UserProfile","UserPosts","Loading","ProfileRoute","match","isLoading","setisLoading","posts","setPosts","user","setUser","users","setUsers","console","log","findUserByUsername","username","result","filter","length","id","name","avatar","email","findUserByUsernameMemo","fetch","then","res","json","response","userFound","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\n\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = ({match}) => {\n  const [isLoading, setisLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  console.log(match)\n  \n\n  const findUserByUsername = (username) => {\n    const result = users.filter((user) => user.username === username);\n    return result.length > 0 ? result[0] : {\n      id: \"\", \n      name: `USER NOT FOUND (username = ${username})`,\n      avatar: \"\",\n      username: username,\n      email: \"\"\n    };\n  }\n\n  const findUserByUsernameMemo = useCallback(\n    (username) => findUserByUsername(username),\n    [findUserByUsername]\n  )\n\n  // api call to get users\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\")\n    .then(res => res.json())\n    .then(response => {\n      setUsers(response);\n      const userFound = findUserByUsernameMemo(match.params.username);\n      console.log(userFound);\n      setUser(userFound);\n      setisLoading(false); \n    });\n  }, [user, findUserByUsernameMemo, match]);\n\n   // api call to get posts\n   useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/1/posts\")\n    .then(res => res.json())\n    .then(response => {\n      setPosts(response);\n      setisLoading(false);\n    })\n  }, []);\n\n  return (\n    <div data-testid=\"profile-route\">\n      {isLoading && <Loading />}\n      {!isLoading && (\n        <React.Fragment>\n          <UserProfile {...user} />\n          <UserPosts posts={posts} />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileRoute;\n"]},"metadata":{},"sourceType":"module"}