{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adriana\\\\codenation\\\\react-16\\\\src\\\\components\\\\Post\\\\Post.jsx\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Post.scss';\n\nconst Post = ({\n  postInfo,\n  userInfo,\n  getUserHandler,\n  teaser\n}) => {\n  const [following, toggleFolowing] = useState(false);\n  const [hasLiked, toggleLike] = useState(false);\n  const {\n    imageUrl,\n    comments\n  } = postInfo;\n  const {\n    avatar,\n    name,\n    username\n  } = userInfo;\n\n  const likedText = () => {\n    console.log(countLikes());\n\n    switch (countLikes()) {\n      case 0:\n        return \"\";\n\n      case 1:\n        return `curtido por ${comments[0].name}`;\n\n      case 2:\n        console.log(comments);\n        return \"curtido por \" + /*#__PURE__*/React.createElement(Link, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 35\n          }\n        }, \"jsdhishdi\") + \" e outra \" + /*#__PURE__*/React.createElement(Link, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 83\n          }\n        }, \"pessoa\");\n\n      default:\n        return \"curtido por \" + /*#__PURE__*/React.createElement(Link, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 34\n          }\n        }, comments[0].name) + \" e outras \" + /*#__PURE__*/React.createElement(Link, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 92\n          }\n        }, countLikes() - 1, \" pessoas\");\n    }\n  };\n\n  const countLikes = () => {\n    let _comments = comments ? comments : [];\n\n    return hasLiked ? _comments.length + 1 : _comments.length;\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"post\",\n    \"data-testid\": \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, !teaser && /*#__PURE__*/React.createElement(\"header\", {\n    className: \"post__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/users/${username}`,\n    className: \"user__thumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/users/${username}`,\n    className: \"user__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleFolowing(!following),\n    className: \"post__context\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"follow-btn\" + (following ? \" is-following\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }, following ? \"Seguindo\" : \"Seguir\"))), /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"post__figure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUrl,\n    alt: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), !teaser && /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"post__controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleLike(!hasLiked),\n    className: \"post__control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: (hasLiked ? \"fas\" : \"far\") + \" fa-heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, likedText())))));\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Adriana/codenation/react-16/src/components/Post/Post.jsx"],"names":["React","useState","Link","Post","postInfo","userInfo","getUserHandler","teaser","following","toggleFolowing","hasLiked","toggleLike","imageUrl","comments","avatar","name","username","likedText","console","log","countLikes","_comments","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,cAAtB;AAAsCC,EAAAA;AAAtC,CAAD,KAAoD;AAC/D,QAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,QAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,KAAD,CAAvC;AAEA,QAAM;AAACW,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBT,QAA7B;AACA,QAAM;AAACU,IAAAA,MAAD;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAA2BX,QAAjC;;AAEA,QAAMY,SAAS,GAAG,MAAM;AAEtBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAU,EAAtB;;AACA,YAAOA,UAAU,EAAjB;AACE,WAAK,CAAL;AACE,eAAO,EAAP;;AACF,WAAK,CAAL;AACE,eAAQ,eAAcP,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAK,EAAvC;;AACF,WAAK,CAAL;AACEG,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,eAAQ,8BAAkB,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAlB,GAAmD,WAAnD,gBAAkE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1E;;AACF;AACE,eAAO,8BAAkB,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAcA,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAA1B,CAAlB,GAA4D,YAA5D,gBAA4E,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAcK,UAAU,KAAG,CAA3B,aAAnF;AATJ;AAWD,GAdD;;AAgBA,QAAMA,UAAU,GAAG,MAAM;AACvB,QAAIC,SAAS,GAAGR,QAAQ,GAAGA,QAAH,GAAc,EAAtC;;AACA,WAAOH,QAAQ,GAAGW,SAAS,CAACC,MAAV,GAAmB,CAAtB,GAA0BD,SAAS,CAACC,MAAnD;AACD,GAHD;;AAOA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAA0B,mBAAY,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACf,MAAD,iBACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASS,QAAS,EAA7B;AAAgC,IAAA,SAAS,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEF,MAAV;AAAkB,IAAA,GAAG,EAAEC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASC,QAAS,EAA7B;AAAgC,IAAA,SAAS,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IADH,CAJF,CADA,eASA;AAAQ,IAAA,OAAO,EAAE,MAAMN,cAAc,CAAC,CAACD,SAAF,CAArC;AAAmD,IAAA,SAAS,EAAC,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAE,gBAAgBA,SAAS,GAAG,eAAH,GAAqB,EAA9C,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,GAAG,UAAH,GAAgB,QAD5B,CADF,CATA,CAFL,eAmBE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEI,QAAV;AAAoB,IAAA,GAAG,EAAEI,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,EAuBG,CAACT,MAAD,iBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMI,UAAU,CAAC,CAACD,QAAF,CAAjC;AAA8C,IAAA,SAAS,EAAC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAE,CAACA,QAAQ,GAAG,KAAH,GAAW,KAApB,IAA6B,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,SAAS,EADZ,CADF,CADF,CAJF,CAxBJ,CADF;AA0CD,CAxED;;AA0EA,eAAed,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Post.scss';\n\nconst Post = ({ postInfo, userInfo, getUserHandler, teaser }) => {\n  const [following, toggleFolowing] = useState(false);\n  const [hasLiked, toggleLike] = useState(false);\n\n  const {imageUrl, comments} = postInfo;\n  const {avatar, name, username} = userInfo;\n\n  const likedText = () => {\n    \n    console.log(countLikes())\n    switch(countLikes()) {\n      case 0:\n        return \"\"\n      case 1: \n        return `curtido por ${comments[0].name}`\n      case 2:\n        console.log(comments)\n        return (\"curtido por \" + (<Link to=\"/\">jsdhishdi</Link>) + \" e outra \" + (<Link to=\"/\">pessoa</Link>))\n      default:\n        return \"curtido por \" + (<Link to=\"/\">{comments[0].name}</Link>) + \" e outras \" + (<Link to=\"/\">{countLikes()-1} pessoas</Link>)\n    }\n  }\n\n  const countLikes = () => {\n    let _comments = comments ? comments : [];\n    return hasLiked ? _comments.length + 1 : _comments.length;\n  }\n\n  \n\n  return (\n    <article className=\"post\" data-testid=\"post\">\n      {!teaser && (\n         <header className=\"post__header\">\n         <div className=\"user\">\n           <Link to={`/users/${username}`} className=\"user__thumb\">\n             <img src={avatar} alt={name} />\n           </Link>\n           <Link to={`/users/${username}`} className=\"user__name\">\n             {name}\n           </Link>\n         </div>\n         <button onClick={() => toggleFolowing(!following)} className=\"post__context\">\n           <span className={\"follow-btn\" + (following ? \" is-following\" : \"\")}>\n             {following ? \"Seguindo\" : \"Seguir\"}\n           </span>\n         </button>\n       </header>\n      )}\n     \n      <figure className=\"post__figure\">\n        <img src={imageUrl} alt={username} />\n      </figure>\n      \n      {!teaser && (\n        <nav className=\"post__controls\">\n          <button onClick={() => toggleLike(!hasLiked)} className=\"post__control\">\n            <span className={(hasLiked ? \"fas\" : \"far\") + \" fa-heart\"}></span>\n          </button>\n          <div className=\"post__status\">\n            <div className=\"user\">\n              <span>\n                {likedText()}\n              </span>\n            </div>\n          </div>\n        </nav>\n      )}\n     \n\n    </article>\n  )\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}